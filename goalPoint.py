
# boundary1 = [(1006, -11), (1006, 16), (979, 16), (1033, 16), (952, 16), (925, 16), (1060, 16), (898, 16), (1087, 16), (1114, 16), (1006, 43), (979, 43), (952, 43), (1033, 43), (925, 43), (1060, 43), (898, 43), (1087, 43), (871, 43), (1114, 43), (1006, 70), (979, 70), (952, 70), (925, 70), (1033, 70), (898, 70), (1060, 70), (871, 70), (1087, 70), (1114, 70), (1141, 70), (1006, 97), (979, 97), (952, 97), (925, 97), (898, 97), (1033, 97), (1060, 97), (871, 97), (1087, 97), (844, 97), (1114, 97), (1141, 97), (1168, 97), (1006, 124), (979, 124), (952, 124), (925, 124), (898, 124), (1033, 124), (1060, 124), (1087, 124), (1114, 124), (1141, 124), (1168, 124), (1006, 151), (979, 151), (952, 151), (925, 151), (898, 151), (1033, 151), (1060, 151), (1087, 151), (1114, 151), (1141, 151), (1168, 151), (1195, 151), (1006, 178), (979, 178), (952, 178), (925, 178), (1033, 178), (1060, 178), (1087, 178), (1114, 178), (1141, 178), (1168, 178), (1195, 178), (1222, 178), (1006, 205), (979, 205), (1033, 205), (1060, 205), (1087, 205), (1114, 205), (1141, 205), (1168, 205), (1195, 205), (1222, 205), (1006, 232), (1033, 232), (1060, 232), (1087, 232), (1114, 232), (1141, 232), (1168, 232), (1195, 232), (1222, 232), (1006, 259), (1033, 259), (1060, 259), (1087, 259), (1114, 259), (1141, 259), (1168, 259), (1195, 259), (1222, 259), (1006, 286), (1033, 286), (1060, 286), (1087, 286), (1114, 286), (1141, 286), (1168, 286), (1195, 286), (1222, 286), (1006, 313), (979, 313), (1033, 313), (1060, 313), (1087, 313), (1114, 313), (1141, 313), (1168, 313), (1195, 313), (1222, 313), (979, 340), (1006, 340), (952, 340), (1033, 340), (1060, 340), (1087, 340), (1114, 340), (1141, 340), (979, 367), (952, 367), (1006, 367), (1033, 367), (1060, 367), (1087, 367), (1114, 367), (952, 394), (979, 394), (1006, 394), (1033, 394), (1060, 394), (1087, 394), (1114, 394), (952, 421), (925, 421), (979, 421), (1006, 421), (1033, 421), (1060, 421), (1087, 421), (1114, 421), (925, 448), (952, 448), (898, 448), (979, 448), (1006, 448), (1033, 448), (1060, 448), (1087, 448), (925, 475), (952, 475), (898, 475), (979, 475), (1006, 475), (1033, 475), (1060, 475), (1087, 475), (925, 502), (898, 502), (952, 502), (979, 502), (1006, 502), (1033, 502), (1060, 502), (1087, 502), (898, 529), (925, 529), (952, 529), (979, 529), (1006, 529), (1033, 529), (1060, 529), (1087, 529), (1114, 529), (898, 556), (925, 556), (952, 556), (979, 556), (1006, 556), (1033, 556), (1060, 556), (1087, 556), (1114, 556), (898, 583), (925, 583), (952, 583), (979, 583), (1006, 583), (1033, 583), (1060, 583), (1087, 583), (1114, 583), (871, 610), (898, 610), (925, 610), (952, 610), (979, 610), (1006, 610), (1033, 610), (1060, 610), (1087, 610), (1114, 610), (1141, 610), (871, 637), (898, 637), (925, 637), (952, 637), (979, 637), (1006, 637), (1033, 637), (1060, 637), (1087, 637), (1114, 637), (1141, 637), (1168, 637), (871, 664), (898, 664), (925, 664), (952, 664), (979, 664), (1006, 664), (1033, 664), (1060, 664), (1087, 664), (1114, 664), (1141, 664), (1168, 664), (1195, 664), (1222, 664), (871, 691), (898, 691), (925, 691), (952, 691), (979, 691), (1006, 691), (1033, 691), (1060, 691), (1087, 691), (1114, 691), (1141, 691), (1168, 691), (1195, 691), (1222, 691), (844, 718), (871, 718), (898, 718), (925, 718), (952, 718), (979, 718), (1006, 718), (1033, 718), (1060, 718), (1087, 718), (1114, 718), (1141, 718), (1168, 718), (1195, 718), (1222, 718)]
# boundary1 = [(1006, -11), (1006, 16), (979, 16), (1033, 16), (952, 16), (1060, 16), (925, 16), (1087, 16), (898, 16), (1114, 16), (1006, 43), (979, 43), (1033, 43), (952, 43), (1060, 43), (925, 43), (1087, 43), (898, 43), (1114, 43), (871, 43), (1006, 70), (979, 70), (1033, 70), (952, 70), (1060, 70), (925, 70), (1087, 70), (898, 70), (1114, 70), (871, 70), (1141, 70), (1006, 97), (979, 97), (1033, 97), (952, 97), (1060, 97), (925, 97), (1087, 97), (898, 97), (1114, 97), (1141, 97), (1168, 97), (1006, 124), (979, 124), (1033, 124), (952, 124), (1060, 124), (925, 124), (1087, 124), (898, 124), (1114, 124), (1141, 124), (1168, 124), (1006, 151), (979, 151), (1033, 151), (952, 151), (1060, 151), (925, 151), (1087, 151), (898, 151), (1114, 151), (1141, 151), (1168, 151), (1195, 151), (1006, 178), (979, 178), (1033, 178), (952, 178), (1060, 178), (925, 178), (1087, 178), (898, 178), (1114, 178), (1141, 178), (1168, 178), (1195, 178), (1222, 178), (1006, 205), (979, 205), (1033, 205), (1060, 205), (1087, 205), (898, 205), (1114, 205), (1141, 205), (1168, 205), (1195, 205), (1222, 205), (1087, 232), (1114, 232), (1141, 232), (1168, 232), (1195, 232), (1222, 232), (1087, 259), (1168, 259), (1195, 259), (1222, 259), (1222, 286), (1222, 313)]
# boundary1 = [(1006, -11), (1006, 16), (979, 16), (952, 16), (1033, 16), (925, 16), (898, 16), (1060, 16), (1087, 16), (1114, 16), (1006, 43), (979, 43), (952, 43), (1033, 43), (925, 43), (898, 43), (1060, 43), (1087, 43), (1114, 43), (1006, 70), (979, 70), (952, 70), (925, 70), (1033, 70), (898, 70), (1060, 70), (871, 70), (1087, 70), (1114, 70), (1141, 70), (1006, 97), (979, 97), (952, 97), (925, 97), (898, 97), (1033, 97), (871, 97), (1060, 97), (844, 97), (1087, 97), (1114, 97), (1141, 97), (1168, 97), (1006, 124), (979, 124), (952, 124), (925, 124), (898, 124), (1033, 124), (1060, 124), (1087, 124), (1114, 124), (1141, 124), (1168, 124), (979, 151), (1006, 151), (952, 151), (925, 151), (898, 151), (1033, 151), (1060, 151), (1087, 151), (1114, 151), (1141, 151), (1168, 151), (1195, 151), (979, 178), (1006, 178), (952, 178), (925, 178), (898, 178), (1033, 178), (1060, 178), (1087, 178), (1114, 178), (1141, 178), (1168, 178), (1195, 178), (1222, 178), (979, 205), (1006, 205), (898, 205), (1033, 205), (1060, 205), (1087, 205), (1114, 205), (1141, 205), (1168, 205), (1195, 205), (1222, 205), (1006, 232), (1033, 232), (1060, 232), (1087, 232), (1114, 232), (1141, 232), (1168, 232), (1195, 232), (1222, 232), (1033, 259), (1060, 259), (1087, 259), (1114, 259), (1141, 259), (1168, 259), (1195, 259), (1222, 259), (1060, 286), (1087, 286), (1114, 286), (1141, 286), (1168, 286), (1195, 286), (1222, 286), (1060, 313), (1087, 313), (1114, 313), (1141, 313), (1168, 313), (1195, 313), (1222, 313), (1087, 340), (1114, 340), (1141, 340), (1087, 367), (1114, 367), (1087, 394), (1060, 421), (1033, 448), (1060, 448), (1033, 475), (1060, 475), (1033, 502), (1060, 502), (1060, 529), (1060, 556), (1033, 583), (1060, 583), (1033, 610), (1060, 610), (1033, 637), (1060, 637), (1033, 664), (1060, 664), (1033, 691), (1060, 691), (1033, 718), (1060, 718)]
# boundary1 = [(1006, -11), (1006, 16), (979, 16), (1033, 16), (952, 16), (1060, 16), (925, 16), (1087, 16), (1114, 16), (1006, 43), (979, 43), (1033, 43), (952, 43), (1060, 43), (925, 43), (1087, 43), (898, 43), (1114, 43), (1006, 70), (979, 70), (1033, 70), (952, 70), (1060, 70), (925, 70), (1087, 70), (898, 70), (1114, 70), (871, 70), (1141, 70), (1006, 97), (979, 97), (1033, 97), (952, 97), (1060, 97), (925, 97), (1087, 97), (898, 97), (1114, 97), (871, 97), (1141, 97), (844, 97), (1168, 97), (1006, 124), (979, 124), (1033, 124), (952, 124), (1060, 124), (925, 124), (1087, 124), (898, 124), (1114, 124), (1141, 124), (1168, 124), (1006, 151), (979, 151), (1033, 151), (952, 151), (1060, 151), (925, 151), (1087, 151), (898, 151), (1114, 151), (1141, 151), (1168, 151), (1195, 151), (1006, 178), (979, 178), (1033, 178), (952, 178), (1060, 178), (925, 178), (1087, 178), (898, 178), (1114, 178), (1141, 178), (1168, 178), (1195, 178), (1222, 178), (1006, 205), (979, 205), (1033, 205), (952, 205), (1060, 205), (925, 205), (1087, 205), (898, 205), (1114, 205), (1141, 205), (1168, 205), (1195, 205), (1222, 205), (1006, 232), (979, 232), (1033, 232), (952, 232), (1060, 232), (925, 232), (1087, 232), (898, 232), (1114, 232), (1141, 232), (1168, 232), (1195, 232), (1222, 232), (1006, 259), (1033, 259), (1060, 259), (1087, 259), (1114, 259), (871, 259), (1141, 259), (1168, 259), (1195, 259), (1222, 259), (1033, 286), (1060, 286), (1087, 286), (1114, 286), (1141, 286), (1168, 286), (1195, 286), (1222, 286), (1060, 313), (1087, 313), (1114, 313), (1141, 313), (1168, 313), (1195, 313), (1222, 313), (1060, 340), (1087, 340), (1222, 340), (1060, 367), (1060, 394), (1060, 421), (1060, 448), (1033, 448), (1033, 475), (1033, 502), (1033, 529), (1060, 529), (1033, 556), (1006, 556), (1060, 556), (1033, 583), (1006, 583), (1060, 583), (1033, 610), (1006, 610), (1060, 610), (1033, 637), (1006, 637), (1060, 637), (1033, 664), (1006, 664), (979, 664), (1060, 664), (1087, 664), (1033, 691), (1060, 691), (1087, 691), (1033, 718), (1060, 718), (1087, 718)]
boundary1 = [(1006, -11), (1006, 16), (979, 16), (1033, 16), (952, 16), (925, 16), (1060, 16), (898, 16), (1087, 16), (1114, 16), (1006, 43), (979, 43), (952, 43), (1033, 43), (925, 43), (1060, 43), (898, 43), (1087, 43), (871, 43), (1114, 43), (1006, 70), (979, 70), (952, 70), (925, 70), (1033, 70), (898, 70), (1060, 70), (871, 70), (1087, 70), (1114, 70), (1141, 70), (1006, 97), (979, 97), (952, 97), (925, 97), (898, 97), (1033, 97), (1060, 97), (871, 97), (1087, 97), (844, 97), (1114, 97), (1141, 97), (1168, 97), (1006, 124), (979, 124), (952, 124), (925, 124), (898, 124), (1033, 124), (1060, 124), (1087, 124), (1114, 124), (1141, 124), (1168, 124), (1006, 151), (979, 151), (952, 151), (925, 151), (898, 151), (1033, 151), (1060, 151), (1087, 151), (1114, 151), (1141, 151), (1168, 151), (1195, 151), (1006, 178), (979, 178), (952, 178), (925, 178), (898, 178), (1033, 178), (1060, 178), (1087, 178), (1114, 178), (1141, 178), (1168, 178), (1195, 178), (1222, 178), (1006, 205), (979, 205), (952, 205), (925, 205), (898, 205), (1033, 205), (1060, 205), (1087, 205), (1114, 205), (1141, 205), (1168, 205), (1195, 205), (1222, 205), (1006, 232), (979, 232), (952, 232), (925, 232), (898, 232), (1033, 232), (1060, 232), (1087, 232), (1114, 232), (1141, 232), (1168, 232), (1195, 232), (1222, 232), (1006, 259), (979, 259), (1033, 259), (1060, 259), (1087, 259), (1114, 259), (1141, 259), (1168, 259), (1195, 259), (1222, 259), (1006, 286), (1033, 286), (1060, 286), (1087, 286), (1114, 286), (1141, 286), (1168, 286), (1195, 286), (1222, 286), (1033, 313), (1060, 313), (1087, 313), (1114, 313), (1141, 313), (1168, 313), (1195, 313), (1222, 313), (1060, 340), (1087, 340), (1114, 340), (1141, 340), (1168, 340), (1222, 340), (1060, 367), (1087, 367), (1114, 367), (1141, 367), (1060, 394), (1087, 394), (1114, 394), (1141, 394), (1060, 421), (1087, 421), (1114, 421), (1060, 448), (1087, 448), (1114, 448), (1033, 475), (1060, 475), (1087, 475), (1114, 475), (1033, 502), (1060, 502), (1087, 502), (1006, 529), (1033, 529), (1060, 529), (1087, 529), (1006, 556), (1033, 556), (1060, 556), (1087, 556), (1006, 583), (1033, 583), (1060, 583), (1087, 583), (1006, 610), (1033, 610), (1060, 610), (1087, 610), (1114, 610), (1006, 637), (1033, 637), (1060, 637), (1087, 637), (1114, 637), (1033, 664), (1060, 664), (1087, 664), (1114, 664), (1060, 691), (1087, 691), (1060, 718), (1087, 718)]


boundary1.sort(key=lambda x: (x[1], x[0]),reverse=True)

y = boundary1[0][1]
i=1
arr =[]
temp = []
check = False
temp.append(boundary1[0])
while(boundary1[i][1] == y):
    
    if (int(boundary1[i-1][0]) - int(boundary1[i][0])) == 27:
        temp.append(boundary1[i])
    else:
        arr.append(temp)
        temp = []
        temp.append(boundary1[i])
    i+=1
    
if len(temp) > 0: 
    arr.append(temp)
    
maxLen = -1
center = []

for cluster in arr:
    len = len(cluster)    
    if len > maxLen:
        maxLen = len
        center = cluster[int(len/2)-1]
        
print(boundary1)
print("arr: ", arr)
print("Max cluster length: ", maxLen)
print("center: ", center)